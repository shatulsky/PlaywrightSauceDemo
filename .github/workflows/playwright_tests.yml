name: PlaywrightSauceDemo tests execution

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      TESTS_PATH: Tests/bin/Release/net8.0
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Cache NuGet
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: nuget-${{ runner.os }}-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            nuget-${{ runner.os }}-

      - name: Restore
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Upload build output
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: ${{ env.TESTS_PATH }}
          retention-days: 3

  test:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        browser: [chromium, firefox]

    env:
      TESTS_PATH: Tests/bin/Release/net8.0
      PlaywrightBrowserName: ${{ matrix.browser }}

    steps:
      - name: Download build output
        uses: actions/download-artifact@v4
        with:
          name: build
          path: ${{ env.TESTS_PATH }}

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Install Playwright
        shell: pwsh
        run: |
          & "${{ env.TESTS_PATH }}/playwright.ps1" install --with-deps ${{ matrix.browser }}

      - name: Run Tests (${{ matrix.browser }})
        run: >
          dotnet test ${{ env.TESTS_PATH }}/Tests.dll
          --logger "GitHubActions;summary.includePassedTests=true;summary.includeSkippedTests=true"

      - name: Upload test results (${{ matrix.browser }})
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.browser }}
          path: ${{ env.TESTS_PATH }}/test-results
          retention-days: 7
